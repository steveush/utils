{"version":3,"file":"toPascalCase.cjs","sources":["../../../src/str/toPascalCase.js"],"sourcesContent":["import isString from \"../type-checks/isString.js\";\r\nimport isArray from \"../type-checks/isArray.js\";\r\nimport toPartsLowerCase from \"./toPartsLowerCase.js\";\r\n\r\nconst toPascalCase = ( str, uppercase = [] ) => {\r\n    if ( isString( str ) ) {\r\n        uppercase = isArray( uppercase, true, a => isString( a ) ) ? uppercase : [];\r\n        return toPartsLowerCase( str ).map( ( part, i ) => {\r\n            if ( uppercase.some( a => a.toLocaleLowerCase() === part ) ) {\r\n                return part.toLocaleUpperCase();\r\n            }\r\n            return part.charAt( 0 ).toLocaleUpperCase() + part.substring( 1 );\r\n        } ).join( \"\" );\r\n    }\r\n    return \"\";\r\n};\r\n\r\nexport default toPascalCase;"],"names":["str","uppercase","arguments","length","undefined","isString","isArray","a","toPartsLowerCase","map","part","i","some","toLocaleLowerCase","toLocaleUpperCase","charAt","substring","join"],"mappings":"uJAIqB,SAAEA,GAAyB,IAApBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACpC,OAAKG,EAAUL,IACXC,EAAYK,EAASL,GAAW,GAAMM,GAAKF,EAAUE,KAAQN,EAAY,GAClEO,EAAkBR,GAAMS,KAAK,CAAEC,EAAMC,IACnCV,EAAUW,MAAML,GAAKA,EAAEM,sBAAwBH,IACzCA,EAAKI,oBAETJ,EAAKK,OAAQ,GAAID,oBAAsBJ,EAAKM,UAAW,KAC9DC,KAAM,KAEP,EACX"}