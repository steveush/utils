{"version":3,"file":"toPartsLowerCase.cjs","sources":["../../../src/str/toPartsLowerCase.js"],"sourcesContent":["import isString from \"../type-checks/isString.js\";\r\n\r\nconst STRIP_REGEX = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,.\\/:;<=>?@\\[\\]^`{|}~]+/g;\r\nconst SPLIT_REGEX = /([A-Z][a-z0-9]+)|([\\-_\\s]+)/g;\r\nconst INNER_SPLIT_REGEX = /([A-Z]+$)/g;\r\n\r\nconst partReducer = ( result, part ) => {\r\n    if ( isString( part, true ) ) {\r\n        part = part.trim();\r\n        if ( part !== \"-\" && part !== \"_\" ) {\r\n            const parts = part.split( INNER_SPLIT_REGEX )\r\n                .map( p => p.trim().toLocaleLowerCase() )\r\n                .filter( Boolean );\r\n            result.push( ...parts );\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nconst toPartsLowerCase = str => {\r\n    if ( isString( str ) ) {\r\n        return str.replaceAll( STRIP_REGEX, \"\" )\r\n            .split( SPLIT_REGEX )\r\n            .reduce( partReducer, [] );\r\n    }\r\n    return [];\r\n};\r\n\r\nexport default toPartsLowerCase;"],"names":["STRIP_REGEX","SPLIT_REGEX","INNER_SPLIT_REGEX","partReducer","result","part","isString","trim","parts","split","map","p","toLocaleLowerCase","filter","Boolean","push","str","replaceAll","reduce"],"mappings":"4DAEMA,EAAc,mEACdC,EAAc,+BACdC,EAAoB,aAEpBC,EAAcA,CAAEC,EAAQC,KAC1B,GAAKC,EAAUD,GAAM,IAEH,OADdA,EAAOA,EAAKE,SACkB,MAATF,EAAe,CAChC,MAAMG,EAAQH,EAAKI,MAAOP,GACrBQ,KAAKC,GAAKA,EAAEJ,OAAOK,sBACnBC,OAAQC,SACbV,EAAOW,QAASP,EACpB,CAEJ,OAAOJ,CAAM,iBAGQY,GAChBV,EAAUU,GACJA,EAAIC,WAAYjB,EAAa,IAC/BS,MAAOR,GACPiB,OAAQf,EAAa,IAEvB"}